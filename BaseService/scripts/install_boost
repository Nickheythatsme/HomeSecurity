#!/usr/bin/env python3
"""
Nicholas Grout 9/5/2020

Download and install Boost for unix
"""
import os
import tarfile
import subprocess
from requests import get as rget
from contextlib import contextmanager


BOOST_DOWNLOAD_URL_UNIX = 'https://dl.bintray.com/boostorg/release/1.74.0/source/boost_1_74_0.tar.gz'
BOOST_ZIP_FILENAME = 'boost.tar.gz'


@contextmanager
def get_stdout():
    fout = open('/dev/stdout', 'w')
    yield fout
    fout.close()


def download_boost_zip(boost_url: str = BOOST_DOWNLOAD_URL_UNIX, boost_zip_filename: str = BOOST_ZIP_FILENAME) -> str:
    req = rget(boost_url, allow_redirects=True, stream=True)
    with get_stdout() as std_out:
        print('Downloading boost zip to "{}"'.format(boost_zip_filename), file=std_out)
        content_length = int(req.headers.get('Content-Length', 1))
        current_content_length = 0
        modulator = 0
        with open(boost_zip_filename, 'wb') as fout:
            for chunk in req.iter_content(chunk_size=2048):
                current_content_length += fout.write(chunk)
                modulator += 1
                if modulator % 500 == 0:
                        print('{:2.2f}%'.format((current_content_length / content_length) * 100), end='\r', file=std_out)
            print('{:2.2f}%'.format((current_content_length / content_length) * 100), end='\r', file=std_out)
        return boost_zip_filename


def unzip_boost(zip_filename: str = BOOST_ZIP_FILENAME) -> str:
    tar = tarfile.open(zip_filename)
    unzip_dir = tar.getmembers()[0]
    print('Unzipping boost to "{}"'.format(unzip_dir.name))
    tar.extractall()
    tar.close()
    return unzip_dir.name


def build_boost(boost_dir: str):
    original_dir = os.getcwd()
    os.chdir(boost_dir)
    proc = subprocess.run(['./bootstrap.sh'])
    if proc.returncode:
        raise RuntimeError('Error running boost bootstrap. Check output above.')
    proc = subprocess.run(['./b2'])
    if proc.returncode:
        raise RuntimeError('Error building boost with b2. Check output above.')
    os.chdir(original_dir)


def install_boost(boost_dir: str):
    original_dir = os.getcwd()
    os.chdir(boost_dir)
    proc = subprocess.run(['./b2 install'])
    if proc.returncode:
        raise RuntimeError('Error installing boost with b2. Check output above.')
    os.chdir(original_dir)


if __name__ == "__main__":
    boost_zip_filename = download_boost_zip()
    boost_unzip_dir = unzip_boost()
    os.remove(boost_zip_filename)
    build_boost(boost_unzip_dir)
    install_boost(boost_unzip_dir)

